import Head from 'next/head'
// import Image from 'next/image'
import NavBar from '@/components/NavBar'
import Footer from '@/components/Footer'
import styles from '@/styles/chat.module.scss'
import { useEffect, useRef, useState } from 'react'
// import Link from 'next/link'
import { signIn } from 'next-auth/react'
import { useSession } from 'next-auth/react'
export default function Home() {
  // nextauth 로그인
 const [isLogin,setIsLogin] = useState(false)
 let session  = useSession();

 useEffect(()=>{
   if (session.status === 'authenticated') {
     console.log(session)
     setIsLogin(true)
   } else {
     setIsLogin(false)
   }
 },[session])

  //fade효과
  const activeFadeElms = [
    useRef(null),
    useRef(null),
  ]
  const [activeFades, setActiveFades] = useState([false])
  const [activeBlink, setActiveBlink] = useState([false])
  function onScroll() {
    const updatedActiveFades = activeFadeElms.map((el: any, i: number) => {
      if (el.current) {
        const isVisible = el.current.getBoundingClientRect().top + el.current.getBoundingClientRect().height > 0 && el.current.getBoundingClientRect().top < window.innerHeight - 150;
        return isVisible;
      }
    });
    setActiveFades(updatedActiveFades as (boolean)[]);
  }
  useEffect(() => {
    onScroll();
    window.addEventListener("scroll", onScroll);
  
    return () => {
      window.removeEventListener("scroll", onScroll);
    }
  }, [])
  
  const [id,setId] = useState('')
  const [password,setPassword] = useState('')
  function onChangeId(e:React.ChangeEvent<HTMLInputElement>){
    setId(e.target.value)
  }
  function onChangePassword(e:React.ChangeEvent<HTMLInputElement>){
    setPassword(e.target.value)
  }
  function onEnter(e:React.KeyboardEvent<HTMLInputElement>){
    onSubmit()
  }
  function onSubmit(){
    console.log(id)
    console.log(password)
  }

  return (
    <>
      <Head>
        <title>Log in</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <NavBar isLogin={isLogin} />
      <div className="wrap">
        <header className="img-box header mb-100 hp-300">
          <div className="img-box--words">
            <h1>Gloomy Chat</h1>
            <p>Video Call &amp; Text Chat</p>
          </div>
        </header>

       <section
          ref={activeFadeElms[0]}
          className={
            activeFades[0]
              ? activeBlink[0]
                ? "section fadeInUp active blink"
                : "section fadeInUp active"
              : "section fadeInUp"
          }
          onMouseEnter={()=>setActiveBlink([true,activeBlink[1]])}
          onMouseLeave={()=>setActiveBlink([false,activeBlink[1]])}
        >
          <h2 className="title-02" id="intro">Log in</h2>

          <div className={`ly-flex-wrap mt-50`}>
            <article className={`${styles['chat-box']}`}>
              <div className={`${styles['chat-box__division--form']} pt-40 pb-40`}>
                <div>
                  <input type="text" placeholder='아이디' maxLength={20} value={id} onChange={onChangeId} />
                  <input type="password" placeholder='비밀번호' className='mt-20' maxLength={30} value={password} onChange={onChangePassword} onKeyDown={(e)=> e.key === 'Enter' ? onEnter(e) : ''} />
                </div>
                <button type='button' className='mt-20'>로그인</button>
              </div>
              <div className={`${styles['chat-box__division--form']} pt-40 pb-40`}>
                <div>
                <button onClick={() => { signIn() }}>구글로 로그인하기</button>
                </div>
              </div>
            </article>
         
          </div>
   
        </section>

      </div>
      <Footer />
    </>
  )
}
